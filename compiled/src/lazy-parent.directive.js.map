{"version":3,"sources":["../../src/lazy-parent.directive.ts"],"names":[],"mappings":"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","file":"lazy-parent.directive.js","sourceRoot":"","sourcesContent":["import {\n    OnDestroy,\n    Directive,\n    ElementRef,\n    Input,\n    AfterContentInit,\n    ContentChildren,\n    QueryList,\n    Inject,\n    NgZone\n} from '@angular/core';\nimport { LazyChildDirective } from './lazy-child.directive';\n\n\nexport class LazyParentDirective implements AfterContentInit, OnDestroy {\n\n    // Amount of items to render initially, if false, items will keep rendering until there's scroll\n     initialBatchSize: number | boolean = false;\n     batchSize: number = 10; // Amount of additional items to load when reaching bottom\n     occupySpaceVirtually: boolean = false; // Whether to simulate large scroll size\n     children: QueryList<LazyChildDirective>;\n    \n    private visibilityCheckInterval: any;\n    private tasks: any[] = [];\n    private visible: boolean = false;\n    private lastItemIdx: any;\n\n    _clearTimeoutFn = clearTimeout;\n    _setTimeoutFn = setTimeout;\n\n    constructor(public elementRef: ElementRef,\n         private windowObject: any,\n                private zone: NgZone) {\n        let t = setTimeout(()=>{}, 100);\n        \n        // Native JS timers (outside of zone.js) seem to perform better, try using them first\n        // and fall back to zone ones if no success\n        if (typeof this.windowObject['__zone_symbol__setTimeout'] === 'function' &&\n            typeof this.windowObject['__zone_symbol__clearTimeout'] === 'function') {\n            this._setTimeoutFn = this.windowObject['__zone_symbol__setTimeout'];\n            this._clearTimeoutFn = this.windowObject['__zone_symbol__clearTimeout'];\n        }\n    }\n\n    ngAfterContentInit() {\n        // Handle scrolling to determine whether more items should be rendered\n        this.elementRef.nativeElement.addEventListener('mousewheel', ($event: any) => {\n            $event.preventDefault();\n            $event.stopPropagation();\n            this.elementRef.nativeElement.scrollTop += $event.deltaY;\n            return false;\n        });\n        this.elementRef.nativeElement.addEventListener('scroll', ($event: any) => {\n            this.scrollHandler($event);\n        });\n        this.children.changes.subscribe(children => {\n            if (this.visible) {\n                this.onVisible();\n            }\n        });\n\n        // onVisible event implementation - important for the element to obtain computed styles\n        this.zone.runOutsideAngular(() => {\n            this.visibilityCheckInterval = setInterval(() => {\n                let visible = false;\n                if (this.elementRef.nativeElement.offsetWidth > 0 && this.elementRef.nativeElement.offsetHeight > 0) {\n                    visible = true;\n                }\n                else {\n                    visible = false;\n                }\n                if (this.visible !== visible) {\n                    if (visible) {\n                        this.onVisible();\n                    }\n                    else {\n                        this.onInvisible();\n                    }\n                }\n                this.visible = visible;\n            }, 10);\n        });\n    }\n\n    /**\n     * Triggers rendering of hidden children, starting from the last rendered item\n     * \n     * @param {*} children \n     * @param {(number | boolean)} [count] \n     * @memberof LazyParentDirective\n     */\n    renderChildren(children: any, count?: number | boolean) {\n        if (!count) {\n            children.forEach((s: any, idx: number) => {\n                this.callAsync(() => {\n                    let child = s;\n                    let lastFailed = false;\n                    if (!lastFailed && !this.hasScroll()) {\n                        child.show();\n                        this.lastItemIdx = idx;\n                    }\n                    else {\n                        lastFailed = true;\n                        if (this.occupySpaceVirtually) {\n                            // Will render a virtual element to hold space in place of the original\n                            child.hide(this.occupySpaceVirtually);\n                        }\n                    }\n                }, idx);\n            });\n        }\n        else {\n            for (let idx = this.lastItemIdx + 1; idx < this.lastItemIdx + count + 1; idx++) {\n                let child = children[idx];\n                if (child) {\n                    this.callAsync(() => {\n                        child.show();\n                        this.lastItemIdx = idx;\n                    }, idx);\n                }\n            }\n        }\n    }\n\n    /**\n     * Triggers when the container is visible on screen, otherwise we can't calculate scrolls etc'\n     * \n     * @memberof LazyParentDirective\n     */\n    onVisible() {\n        if (this.occupySpaceVirtually) {\n            this.renderChildren(this.children);\n        }\n        else {\n            this.lastItemIdx = -1;\n            this.renderChildren(this.children.toArray(), this.initialBatchSize);\n        }\n    }\n\n    onInvisible() {\n        this.clearTasks();\n    }\n\n    /**\n     * Handle scrolling and check whether hidden element should be rendered\n     *\n     * @memberof LazyLoadParentDirective\n     */\n    scrollHandler($event: any) {\n        let lastFailed = false;\n        let children = this.children.toArray();\n        if (this.occupySpaceVirtually) {\n            for (let i = 0; i < children.length; i++) {\n                let child = children[i];\n                if (!child.showing && !lastFailed) {\n                    if (this.isElementVisible(child.shownElementRef)) {\n                        // Showing the item immediately, with no async task,\n                        // that's to give this item higher rendering priority over others below it\n                        child.show();\n                    }\n                    else {\n                        lastFailed = true;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            // Check if the scroll reached the bottom, if so, attempt rendering another batch\n            if (this.elementRef.nativeElement.scrollTop >=\n                this.elementRef.nativeElement.scrollHeight - this.elementRef.nativeElement.offsetHeight) {\n                this.renderChildren(this.children.toArray(), this.batchSize);\n            }\n        }\n    }\n\n    /**\n     * Checks whether a child element is now visible in its parent container\n     *\n     * @memberof LazyLoadParentDirective\n     */\n    isElementVisible(e: ElementRef): boolean {\n        let result = false;\n        let parent = this.elementRef.nativeElement;\n        let child = e.nativeElement;\n\n        let parentRect = parent.getClientRects()[0];\n        let childRect = child.getClientRects()[0];\n\n        let childTop = childRect.top - parentRect.top;\n        if (childTop <= parent.scrollTop + parent.offsetHeight) {\n            result = true;\n        }\n        else {\n            result = false;\n        }\n        return result;\n    }\n\n    /**\n     * Checks if the container has a scrollbar based on scrollHeight\n     *\n     * @returns {boolean}\n     * @memberof LazyLoadParentDirective\n     */\n    hasScroll(): boolean {\n        let target = this.elementRef.nativeElement;\n        let result = target.scrollHeight > target.offsetHeight;\n        return result;\n    }\n\n    callAsync(fn: any, idx?: number) {\n        let _setTimeoutFn = this._setTimeoutFn;\n        this.zone.runOutsideAngular(() => {\n            this.tasks.push(_setTimeoutFn(fn, idx ? idx * 5 : 1));\n        });\n    }\n\n    clearTasks() {\n        let _clearTimeoutFn = this._clearTimeoutFn;\n        this.zone.runOutsideAngular(() => {\n            this.tasks.map(task => { _clearTimeoutFn(task); return null; });\n            this.tasks = [];\n        });\n    }\n\n    ngOnDestroy() {\n        this.clearTasks();\n        if (this.visibilityCheckInterval) {\n            clearInterval(this.visibilityCheckInterval);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[lazyParent]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Inject, args: ['windowObject', ] }, ]},\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initialBatchSize': [{ type: Input },],\n'batchSize': [{ type: Input },],\n'occupySpaceVirtually': [{ type: Input },],\n'children': [{ type: ContentChildren, args: [LazyChildDirective, {descendants: true}, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}